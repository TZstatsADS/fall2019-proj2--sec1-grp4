final_data <- read.csv('../output/FINAL.csv')
View(final_data)
filming <- read.csv('../output/Final_Filming.csv')
landmark <- read.csv('../output/Final_Landmarks.csv')
libraries <- read.csv('../output/Final_Libraries.csv')
museums <- read.csv('../output/Final_Museums.csv')
restaurant <- read.csv('../output/Final_Restaurant.csv')
View(final_data)
data <- read.csv('../output/FINAL.csv')
filming <- read.csv('../output/Final_Filming.csv')
landmark <- read.csv('../output/Final_Landmarks.csv')
libraries <- read.csv('../output/Final_Libraries.csv')
museums <- read.csv('../output/Final_Museums.csv')
restaurant <- read.csv('../output/Final_Restaurant.csv')
library(shiny); runApp('D:/CUSTAT/5243/fall2019-proj2--sec1-grp4/combine_tab_stats.R')
final_data <- merge(filming,landmark,all = T)
final_data <- rbind(filming,landmark,libraries,museums,restaurant)
final_data <- merge(filming,landmark,all = T)
final_data <- merge(final_data,libraries,all = T)
final_data <- merge(final_data,museums,all = T)
final_data <- merge(final_data,restaurant,all = T)
View(final_data)
unique(final_data$type)
colnames(final_data)
View(restaurant)
runApp()
library(tigris)
library(png)
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
library(shiny)
library(choroplethr)
library(choroplethrZip)
library(ggplot2)
library(ggmap)
library(readr)
library(plyr)
library(tmap)
library(sf)
library(leaflet)
library(raster)
library(spData)
library(shinydashboard)
library(shinythemes)
library(leaflet.extras)
library(magrittr)
library(gmapsdistance)
library(plotly)
library(googleway)
library(mapview)
library(shinyBS)
library(shinyjs)
library(htmltools)
library(bsplus)
library(shinyWidgets)
library(shinycssloaders)
library(shinycustomloader)
library(shinyFeedback)
library(geosphere)
register_google(key="AIzaSyC37N09VQDrlBw-myPO42263tqOj_He9xA")
library(tigris)
library(png)
library(dtplyr)
library(dplyr)
library(DT)
library(lubridate)
library(shiny)
library(choroplethr)
library(choroplethrZip)
library(ggplot2)
library(ggmap)
library(readr)
library(plyr)
library(tmap)
library(sf)
library(leaflet)
library(raster)
library(spData)
library(shinydashboard)
library(shinythemes)
library(leaflet.extras)
library(magrittr)
library(gmapsdistance)
library(plotly)
library(googleway)
library(mapview)
library(shinyBS)
library(shinyjs)
library(htmltools)
library(bsplus)
library(shinyWidgets)
library(shinycssloaders)
library(shinycustomloader)
library(shinyFeedback)
library(geosphere)
runApp()
mapIcons <- iconList(
Films = makeIcon("../doc/figs/video.png","../doc/figs/video@2x.png", 18, 18),
Landmarks = makeIcon("../doc/figs/landmarks.png","../doc/figs/landmarks@2x.png", 18,18),
Libraries = makeIcon('../doc/figs/open-book.png','../doc/figs/open-book@2x.png',18,18),
Museums = makeIcon('../doc/figs/museum.png','../doc/figs/museum@2x.png',18,18),
Restaurants = makeIcon('../doc/figs/fork.png','../doc/figs/fork@2x.png',18,18)
)
runApp()
runApp()
runApp()
runApp()
mapIcons['Restaurants']
runApp()
oceanIcons <- iconList(
ship = makeIcon("../doc/figs/video.png", "ferry-18@2x.png", 18, 18),
pirate = makeIcon("../doc/figs/landmarks.png", "danger-24@2x.png", 24, 24)
)
oceanIcons <- iconList(
ship = makeIcon("../doc/figs/video.png", "ferry-18@2x.png", 18, 18),
pirate = makeIcon("../doc/figs/landmarks.png", "danger-24@2x.png", 24, 24)
)
# Some fake data
df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(type = factor(
ifelse(runif(20) > 0.75, "pirate", "ship"),
c("ship", "pirate")
))
)
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~oceanIcons[type])
oceanIcons <- iconList(
ship = makeIcon("ferry-18.png", "ferry-18@2x.png", 18, 18),
pirate = makeIcon("danger-24.png", "danger-24@2x.png", 24, 24)
)
# Some fake data
df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(type = factor(
ifelse(runif(20) > 0.75, "pirate", "ship"),
c("ship", "pirate")
))
)
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~oceanIcons[type])
oceanIcons <- iconList(
ship = makeIcon("ferry-18.png", "ferry-18@2x.png", 18, 18),
pirate = makeIcon("danger-24.png", "danger-24@2x.png", 24, 24)
)
leaflet(data = quakes1) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = leafIcons)
quakes1 <- quakes[1:10,]
leafIcons <- icons(
iconUrl = ifelse(quakes1$mag < 4.6,
"http://leafletjs.com/examples/custom-icons/leaf-green.png",
"http://leafletjs.com/examples/custom-icons/leaf-red.png"
),
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "http://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
leaflet(data = quakes1) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = leafIcons)
runApp()
runApp()
runApp()
?addMarkers()
runApp()
unique(final_data)
unique(final_data$type)
unique(final_data$name[final_data$type=='Landmarks'])
View(final_data)
View(landmark)
landmark <- read.csv('../output/landmarks_final_clean.csv',as.is = T)
colnames(landmark) <- tolower(colnames(landmark))
colnames(landmark)[10:11] <- c('lat','lon')
landmark$borough[which(landmark$borough=='MN')] <- 'Manhattan'
landmark$borough[which(landmark$borough=='BK')] <- 'Brooklyn'
landmark$borough[which(landmark$borough=='QN')] <- 'Queens'
landmark$borough[which(landmark$borough=='BX')] <- 'Bronx'
landmark$type <- 'Landmarks'
landmark$name <- landmark$address
write_csv(landmark, "../output/Final_Landmarks.csv")
runApp()
filming <- read.csv('../output/Final_Filming.csv')
landmark <- read.csv('../output/Final_Landmarks.csv')
libraries <- read.csv('../output/Final_Libraries.csv')
museums <- read.csv('../output/Final_Museums.csv')
restaurant <- read.csv('../output/Final_Restaurant.csv')
final_data <- merge(filming,landmark,all = T)
final_data <- merge(final_data,libraries,all = T)
final_data <- merge(final_data,museums,all = T)
final_data <- merge(final_data,restaurant,all = T)
View(landmark)
runApp()
runApp()
runApp()
